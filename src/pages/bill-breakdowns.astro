---
import type { Bill } from '../lib/db';
import { getAllBills } from '../lib/db';
import { getStatusLabel, statusMap } from '../lib/utils';
import BillCard from '../components/BillCard.astro';
import BaseLayout from '../layout/BaseLayout.astro';

const search = Astro.url.searchParams;
const selectedStatus = search.get('status') || 'All';
const selectedChamber = (search.get('chamber') || 'All').toLowerCase();

const bills: Bill[] = await getAllBills();
const statusOptions = Object.entries(statusMap);

const chamberMap: Record<string, number> = {
  house: 59,
  senate: 60,
};

const validChamber = selectedChamber in chamberMap;

const filteredBills = bills.filter((bill) => {
  const matchesStatus =
    selectedStatus === 'All' ||
    getStatusLabel(bill.status_id) === getStatusLabel(Number(selectedStatus));

  const matchesChamber =
    selectedChamber === 'all' ||
    (validChamber && bill.body_id === chamberMap[selectedChamber]);

  return matchesStatus && matchesChamber;
});
---

<BaseLayout title="Bill Breakdowns">
  <h1>Bill Breakdowns</h1>

  <div class="filters">
    <label for="status-filter">Filter by Status:</label>
    <select id="status-filter" onchange="handleStatusChange(event)">
      <option value="All">All Statuses</option>
      {statusOptions.map(([id, label]) => (
        <option value={id} selected={selectedStatus === id}>{label}</option>
      ))}
    </select>
  </div>

  <div class="filters">
    {['all', 'house', 'senate'].map(label => (
      <button
        class={`chamber-filter ${selectedChamber === label ? 'active' : ''}`}
        data-filter={label}
      >
        {label === 'all' ? 'All Bills' : `${label.charAt(0).toUpperCase() + label.slice(1)} Bills`}
      </button>
    ))}
  </div>

  {filteredBills.length === 0 && <p>No matching bills found.</p>}

  <div class="grid">
    {filteredBills.map((bill: Bill) => (
      <BillCard
        billNumber={bill.bill_number}
        title={bill.title}
        date={bill.status_date || ''}
        status={bill.status_id.toString()}
        chamber={bill.body_id === 2 ? 'Senate' : 'House'}
        summary_short={bill.description}
      />
    ))}
  </div>

  <script is:inline>
    const chamberButtons = document.querySelectorAll('.chamber-filter');

    function handleStatusChange(e) {
      const value = e.target.value;
      const params = new URLSearchParams(window.location.search);
      params.set('status', value);
      window.location.search = params.toString();
    }

    chamberButtons.forEach((btn) => {
      btn.addEventListener('click', () => {
        const filter = btn.dataset.filter;
        const params = new URLSearchParams(window.location.search);
        params.set('chamber', filter);
        window.location.search = params.toString();
      });
    });
  </script>

  <style>
    button.active {
      background: var(--accent);
      color: white;
    }
    .filters {
      margin-bottom: 1.5rem;
      display: flex;
      gap: 0.5rem;
      align-items: center;
      flex-wrap: wrap;
    }
    .filters label {
      font-weight: bold;
    }
  </style>
</BaseLayout>
